.TH LIBINIFILE 3 "17 January 2008" "QNET" "Linux Programmer's Manual" 
.\"
.\"     Copyright (c) 2008 Anders Lövgren
.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 2 of the License, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program; if not, write to the Free Software
.\"     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\"
.SH NAME
libinifile \- Small library to parse ini-style configuarion files.
.SH SYNOPSIS
.B #include <inifile.h>
.SH DESCRIPTION
libinifile is a small library for parsing ini-style configuration files,
that is, configuration files with keyword \= value entries optionally organized
under sections with section header. For example Samba and MySQL is using
this format for their configuration files. 
.PP
The library implements and validating parser where syntax check is done 
in parallell with the parsing. Use inifile_get_error() to differentiate
between end of file condition and a parse error. Each parser has its own
error object.
.SH SUMMARY
.RS
.nf
/* 
 * Structure for an entry parsed from the ini-file:
 */
struct inient
{
        unsigned int line;      /* line number. */
        char *sect;             /* section name. */
        char *key;              /* entry keyword. */
        char *val;              /* entry value. */
};
.TP
\fBint inifile_init\fI(struct inifile *, const char *conf);\fP
Initialise library, return 0 if successful and -1 on error. The conf
argument is the name of the ini-file to parse.
.TP
\fBconst struct inient * inifile_parse\fI(struct inifile *);\fP
Parse and return a pointer to the next entry from the ini-file. Returns NULL
on end of file condition or if a parse error happens. Use
inifile_get_error() to check if error.
.TP
\fBvoid inifile_free\fI(struct inifile *);\fP
Release memory allocated and close the ini-file.
.TP
\fBconst struct inierr * inifile_get_error\fI(struct inifile *);\fP
Get last error or NULL if no error occured.
.TP
\fBvoid inifile_clear_error\fI(struct inifile *);\fP
Clear last error object.
.SH EXAMPLE
A small example showing how to parse an ini-file:
.RS
.nf

#include <stdio.h>
#include <inifile.h>

static void die(struct inifile *inf)
{
	inierr *error = inifile_get_error(inf);
	fprintf(stderr, "%s: %s\n", CONFIG, inf->file, error->msg);
	exit(1);
}

int main(int argc, char **argv)
{
	inifile inf;
	inient *ent;
	
	if(inifile_init(&inf, "sample.conf") == 0) {
		while((ent = inifile(&inf))) {
			printf("sect=%s, key=%s, val=%s\n", 
			ent->sect, ent->key, ent->val);
		}
		if(inifile_get_error(&inf)) {
			die(&inf);
		} 
	} else {
		die(&inf);
	}
	
	inifile_free(&inf);
	return 0;
}
.RE
.fi
.SH BUGS
Probably.
.SH AUTHOR
Anders Lövgren <lespaul@algonet.se>
.SH COPYRIGHT
Copyright (c) 2008 Anders Lövgren
.PP
Distributed under the GNU General Public License.
.SH SEE ALSO
.BR libinifile_cxx (3)
